// –ò–∑–Ω–∞—á–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å —Ä–∞—Å—Ö–æ–¥–∞–º–∏
const vehicles = {
    "–ö–∞–º–ê–ó-5350": 46,
    "–ö–∞–º–ê–ó-5511": 41,
    "–ö–∞–º–ê–ó-4310": 46,
    "–ö–∞–º–ê–ó-53949": 40.2,
    "–£—Ä–∞–ª-4320": 44.5,
    "–£–ê–ó-3163-103": 16.4,
    "–£–ê–ó-3962": 17.5,
    "–ì–ê–ó-233014": 25,
    "–ì–ê–ó-233115": 33,
    "Volkswagen 7HC Caravella": 10.2,
    "–¢–∏—Ç–∞–Ω": 40.2,
    "–§–µ–Ω–∏–∫—Å": 40.2,
    "–£—Ä–∞–ª-2-–æ—Å–∏": 40,
    "–ö–∞–º–ê–ó-63501": 62
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
document.querySelectorAll('.tab-link').forEach(button => {
    button.addEventListener('click', () => {
        document.querySelectorAll('.tab-link').forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');

        const tabId = button.getAttribute('data-tab');
        document.querySelectorAll('.tab-content').forEach(tab => {
            tab.classList.remove('active');
        });
        document.getElementById(tabId).classList.add('active');
    });
});

// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–∑—É–Ω–∫–∞
document.getElementById('percentage').addEventListener('input', function() {
    document.getElementById('percentageValue').innerText = this.value + "%";
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞
function calculateFuelConsumption(startMileage, endMileage, engineHours, engineFuel, vehicleType, percentage) {
    const mileage = endMileage - startMileage;

    const baseFuelConsumption = mileage * (vehicles[vehicleType] / 100);
    const engineHoursFuel = engineHours * engineFuel;

    let totalFuelConsumption = baseFuelConsumption + (baseFuelConsumption * (percentage / 100)) + engineHoursFuel;

    // –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É, –µ—Å–ª–∏ –¥—Ä–æ–±–Ω–∞—è —á–∞—Å—Ç—å >= 0.5
    if (totalFuelConsumption % 1 >= 0.5) {
        totalFuelConsumption = Math.ceil(totalFuelConsumption);
    } else {
        totalFuelConsumption = Math.floor(totalFuelConsumption);
    }

    return { totalFuelConsumption, mileage };
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞
document.getElementById('calculateBtn').addEventListener('click', () => {
    const startMileage = parseFloat(document.getElementById('startMileage').value);
    const endMileage = parseFloat(document.getElementById('endMileage').value);
    const engineHours = parseFloat(document.getElementById('engineHours').value);
    const engineFuel = parseFloat(document.getElementById('engineFuel').value);
    const vehicleType = document.getElementById('vehicleType').value;
    const percentage = parseFloat(document.getElementById('percentage').value);

    const result = calculateFuelConsumption(startMileage, endMileage, engineHours, engineFuel, vehicleType, percentage);

    document.getElementById('result').innerText = `–û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç ${result.totalFuelConsumption} –ª–∏—Ç—Ä–æ–≤ –Ω–∞ ${result.mileage} –∫–º.`;
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
document.getElementById('addVehicleBtn').addEventListener('click', () => {
    const newVehicleName = document.getElementById('newVehicleName').value;
    const newVehicleConsumption = parseFloat(document.getElementById('newVehicleConsumption').value);

    if (newVehicleName && !isNaN(newVehicleConsumption)) {
        vehicles[newVehicleName] = newVehicleConsumption;

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
        const option = document.createElement('option');
        option.value = newVehicleName;
        option.textContent = `${newVehicleName} (${newVehicleConsumption} –ª/100 –∫–º)`;

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –≤ –æ–±–∞ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–∞
        document.getElementById('vehicleType').appendChild(option);
        document.getElementById('vehicleTypePlan').appendChild(option.cloneNode(true));

        alert("–ê–≤—Ç–æ–º–æ–±–∏–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
    } else {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
    }
});

// –†–∞—Å—á–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
document.getElementById('planRouteBtn').addEventListener('click', () => {
    const distance = parseFloat(document.getElementById('distance').value);
    const vehicleType = document.getElementById('vehicleTypePlan').value;
    const tankVolume = parseFloat(document.getElementById('tankVolume').value);

    const fuelPer100Km = vehicles[vehicleType];
    const totalFuelRequired = (distance / 100) * fuelPer100Km;

    const roundedFuelRequired = totalFuelRequired % 1 >= 0.5 ? Math.ceil(totalFuelRequired) : Math.floor(totalFuelRequired);
    const refuelsRequired = totalFuelRequired / tankVolume;
    const roundedRefuelsRequired = refuelsRequired % 1 >= 0.5 ? Math.ceil(refuelsRequired) : Math.floor(refuelsRequired);

    document.getElementById('routeResult').innerText = `–î–ª—è –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ ${distance} –∫–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è ${roundedFuelRequired} –ª–∏—Ç—Ä–æ–≤ —Ç–æ–ø–ª–∏–≤–∞. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—Ä–∞–≤–∏—Ç—å—Å—è ${roundedRefuelsRequired} —Ä–∞–∑(–∞).`;
});

/* --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π --- */

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∏–∑ localStorage
function loadSavedVehicles() {
    const saved = localStorage.getItem('vehicles');
    if (saved) {
        const parsed = JSON.parse(saved);
        for (const name in parsed) {
            if (!vehicles[name]) {
                vehicles[name] = parsed[name];
                addVehicleOption(name, parsed[name]);
            }
        }
        updateVehicleList();
    }
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
function saveVehicles() {
    const customVehicles = {};
    for (const key in vehicles) {
        if (!defaultVehicles[key]) {
            customVehicles[key] = vehicles[key];
        }
    }
    localStorage.setItem('vehicles', JSON.stringify(customVehicles));
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ option –≤ –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
function addVehicleOption(name, consumption) {
    const option = document.createElement('option');
    option.value = name;
    option.textContent = `${name} (${consumption} –ª/100 –∫–º)`;
    document.getElementById('vehicleType').appendChild(option);
    document.getElementById('vehicleTypePlan').appendChild(option.cloneNode(true));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
function updateVehicleList() {
    const list = document.getElementById('vehicleList');
    if (!list) return;
    list.innerHTML = '';
    for (const name in vehicles) {
        if (!defaultVehicles[name]) {
            const item = document.createElement('div');
            item.style.margin = '10px 0';
            item.innerHTML = `<span>${name} (${vehicles[name]} –ª/100 –∫–º)</span>
            <button style="margin-left:10px;" onclick="deleteVehicle('${name}')">üóë –£–¥–∞–ª–∏—Ç—å</button>`;
            list.appendChild(item);
        }
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
function deleteVehicle(name) {
    delete vehicles[name];
    saveVehicles();
    updateVehicleList();
    updateVehicleSelects();
}

// –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ —Å–ø–∏—Å–∫–∏
function updateVehicleSelects() {
    const selects = [document.getElementById('vehicleType'), document.getElementById('vehicleTypePlan')];
    selects.forEach(select => {
        select.innerHTML = '';
        for (const key in vehicles) {
            const option = document.createElement('option');
            option.value = key;
            option.textContent = `${key} (${vehicles[key]} –ª/100 –∫–º)`;
            select.appendChild(option);
        }
    });
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π –∞–≤—Ç–æ
document.getElementById('addVehicleBtn').addEventListener('click', () => {
    const newVehicleName = document.getElementById('newVehicleName').value;
    const newVehicleConsumption = parseFloat(document.getElementById('newVehicleConsumption').value);

    if (newVehicleName && !isNaN(newVehicleConsumption)) {
        vehicles[newVehicleName] = newVehicleConsumption;
        saveVehicles();
        updateVehicleList();
        updateVehicleSelects();
        alert("–ê–≤—Ç–æ–º–æ–±–∏–ª—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
    } else {
        alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ!");
    }
});

// –•—Ä–∞–Ω–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∞–≤—Ç–æ (–¥–ª—è –æ—Ç–ª–∏—á–∏—è –æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö)
const defaultVehicles = JSON.parse(JSON.stringify(vehicles));
window.onload = loadSavedVehicles;
